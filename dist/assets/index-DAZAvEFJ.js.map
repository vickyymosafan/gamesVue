{"version":3,"file":"index-DAZAvEFJ.js","sources":["../../src/components/ParticleBackground.vue","../../src/types/index.ts","../../src/composables/useGame.ts","../../src/App.vue","../../src/main.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { loadFull } from \"tsparticles\"\nimport type { Engine } from \"tsparticles-engine\"\n\nconst particlesInit = async (engine: Engine) => {\n  await loadFull(engine)\n}\n\nconst options = {\n  background: {\n    opacity: 0\n  },\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    color: {\n      value: \"#ffffff\"\n    },\n    shape: {\n      type: \"circle\"\n    },\n    opacity: {\n      value: 0.5,\n      random: false\n    },\n    size: {\n      value: 3,\n      random: true\n    },\n    line_linked: {\n      enable: true,\n      distance: 150,\n      color: \"#ffffff\",\n      opacity: 0.4,\n      width: 1\n    },\n    move: {\n      enable: true,\n      speed: 2,\n      direction: \"none\",\n      random: false,\n      straight: false,\n      out_mode: \"out\",\n      bounce: false\n    }\n  },\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\"\n      },\n      resize: true\n    }\n  },\n  retina_detect: true\n}\n</script>\n\n<template>\n  <Particles\n    id=\"tsparticles\"\n    :particlesInit=\"particlesInit\"\n    :options=\"options\"\n    class=\"particles-container\"\n  />\n</template>\n\n<style scoped>\n.particles-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n}\n</style>","export type Choice = 'rock' | 'paper' | 'scissors'\nexport type GameResult = 'win' | 'lose' | 'draw' | null\n\nexport const CHOICES: Choice[] = ['rock', 'paper', 'scissors']\n\nexport const EMOJIS: Record<Choice, string> = {\n  rock: '‚úä',\n  paper: '‚úã',\n  scissors: '‚úåÔ∏è'\n}\n\nexport const getResultMessage = (result: GameResult): string => {\n  if (!result) return ''\n  if (result === 'win') return 'You win! üéâ'\n  if (result === 'lose') return 'You lose! üò¢'\n  return 'Draw! ü§ù'\n}","import { ref } from 'vue'\nimport confetti from 'canvas-confetti'\nimport type { Choice, GameResult } from '../types'\nimport { CHOICES } from '../types'\n\nexport function useGame() {\n  const score = ref(0)\n  const playerChoice = ref<Choice | null>(null)\n  const computerChoice = ref<Choice | null>(null)\n  const result = ref<GameResult>(null)\n  const isLoading = ref(false)\n\n  const getComputerChoice = (): Choice => {\n    return CHOICES[Math.floor(Math.random() * CHOICES.length)]\n  }\n\n  const determineWinner = (player: Choice, computer: Choice): GameResult => {\n    if (player === computer) return 'draw'\n    if (\n      (player === 'rock' && computer === 'scissors') ||\n      (player === 'paper' && computer === 'rock') ||\n      (player === 'scissors' && computer === 'paper')\n    ) {\n      return 'win'\n    }\n    return 'lose'\n  }\n\n  const resetGame = () => {\n    score.value = 0\n    playerChoice.value = null\n    computerChoice.value = null\n    result.value = null\n    isLoading.value = false\n  }\n\n  const playGame = async (choice: Choice) => {\n    playerChoice.value = choice\n    isLoading.value = true\n    computerChoice.value = null\n    result.value = null\n    \n    await new Promise(resolve => setTimeout(resolve, 1000))\n    \n    const computer = getComputerChoice()\n    computerChoice.value = computer\n    isLoading.value = false\n    \n    const gameResult = determineWinner(choice, computer)\n    result.value = gameResult\n    \n    if (gameResult === 'win') {\n      score.value++\n      confetti({\n        particleCount: 100,\n        spread: 70,\n        origin: { y: 0.6 }\n      })\n    }\n  }\n\n  return {\n    score,\n    playerChoice,\n    computerChoice,\n    result,\n    isLoading,\n    playGame,\n    resetGame\n  }\n}","<script setup lang=\"ts\">\nimport GameHand from './components/GameHand.vue'\nimport GameChoice from './components/GameChoice.vue'\nimport ParticleBackground from './components/ParticleBackground.vue'\nimport { useGame } from './composables/useGame'\nimport { CHOICES, EMOJIS, getResultMessage } from './types'\n\nconst {\n  score,\n  playerChoice,\n  computerChoice,\n  result,\n  isLoading,\n  playGame,\n  resetGame\n} = useGame()\n</script>\n\n<template>\n  <ParticleBackground />\n  \n  <div class=\"game-container\">\n    <h1>Rock Paper Scissors</h1>\n    <div class=\"score-container\">\n      <div class=\"score\">Score: {{ score }}</div>\n      <button class=\"new-game-btn\" @click=\"resetGame\">New Game</button>\n    </div>\n    \n    <div class=\"hands\">\n      <GameHand\n        :emoji=\"playerChoice ? EMOJIS[playerChoice] : 'ü§î'\"\n        :is-shaking=\"!!playerChoice\"\n        :is-winner=\"result === 'win'\"\n      />\n      <div v-if=\"isLoading\" class=\"loading\"></div>\n      <GameHand\n        v-else\n        :emoji=\"computerChoice ? EMOJIS[computerChoice] : 'ü§ñ'\"\n        :is-shaking=\"!!computerChoice\"\n        :is-winner=\"result === 'lose'\"\n      />\n    </div>\n    \n    <div class=\"result\">{{ getResultMessage(result) }}</div>\n    \n    <div class=\"choices\">\n      <GameChoice\n        v-for=\"choice in CHOICES\"\n        :key=\"choice\"\n        :choice=\"choice\"\n        :emoji=\"EMOJIS[choice]\"\n        :disabled=\"isLoading\"\n        :on-select=\"playGame\"\n      />\n    </div>\n  </div>\n</template>","import { createApp } from 'vue'\nimport './style.css'\nimport App from './App.vue'\nimport Particles from \"vue3-particles\"\n\nconst app = createApp(App)\napp.use(Particles)\napp.mount('#app')"],"names":["particlesInit","engine","loadFull","options","CHOICES","EMOJIS","getResultMessage","result","useGame","score","ref","playerChoice","computerChoice","isLoading","getComputerChoice","determineWinner","player","computer","choice","resolve","gameResult","confetti","playGame","resetGame","app","createApp","App","Particles"],"mappings":"21CAIM,MAAAA,EAAgB,MAAOC,GAAmB,CAC9C,MAAMC,EAASD,CAAM,CACvB,EAEME,EAAU,CACd,WAAY,CACV,QAAS,CACX,EACA,UAAW,CACT,OAAQ,CACN,MAAO,GACP,QAAS,CACP,OAAQ,GACR,WAAY,GAAA,CAEhB,EACA,MAAO,CACL,MAAO,SACT,EACA,MAAO,CACL,KAAM,QACR,EACA,QAAS,CACP,MAAO,GACP,OAAQ,EACV,EACA,KAAM,CACJ,MAAO,EACP,OAAQ,EACV,EACA,YAAa,CACX,OAAQ,GACR,SAAU,IACV,MAAO,UACP,QAAS,GACT,MAAO,CACT,EACA,KAAM,CACJ,OAAQ,GACR,MAAO,EACP,UAAW,OACX,OAAQ,GACR,SAAU,GACV,SAAU,MACV,OAAQ,EAAA,CAEZ,EACA,cAAe,CACb,UAAW,SACX,OAAQ,CACN,QAAS,CACP,OAAQ,GACR,KAAM,SACR,EACA,OAAQ,EAAA,CAEZ,EACA,cAAe,EACjB,kPC3DaC,EAAoB,CAAC,OAAQ,QAAS,UAAU,EAEhDC,EAAiC,CAC5C,KAAM,IACN,MAAO,IACP,SAAU,IACZ,EAEaC,EAAoBC,GAC1BA,EACDA,IAAW,MAAc,cACzBA,IAAW,OAAe,eACvB,WAHa,GCPf,SAASC,GAAU,CAClB,MAAAC,EAAQC,EAAI,CAAC,EACbC,EAAeD,EAAmB,IAAI,EACtCE,EAAiBF,EAAmB,IAAI,EACxCH,EAASG,EAAgB,IAAI,EAC7BG,EAAYH,EAAI,EAAK,EAErBI,EAAoB,IACjBV,EAAQ,KAAK,MAAM,KAAK,SAAWA,EAAQ,MAAM,CAAC,EAGrDW,EAAkB,CAACC,EAAgBC,IACnCD,IAAWC,EAAiB,OAE7BD,IAAW,QAAUC,IAAa,YAClCD,IAAW,SAAWC,IAAa,QACnCD,IAAW,YAAcC,IAAa,QAEhC,MAEF,OAoCF,MAAA,CACL,MAAAR,EACA,aAAAE,EACA,eAAAC,EACA,OAAAL,EACA,UAAAM,EACA,SA/Be,MAAOK,GAAmB,CACzCP,EAAa,MAAQO,EACrBL,EAAU,MAAQ,GAClBD,EAAe,MAAQ,KACvBL,EAAO,MAAQ,KAEf,MAAM,IAAI,QAAQY,GAAW,WAAWA,EAAS,GAAI,CAAC,EAEtD,MAAMF,EAAWH,EAAkB,EACnCF,EAAe,MAAQK,EACvBJ,EAAU,MAAQ,GAEZ,MAAAO,EAAaL,EAAgBG,EAAQD,CAAQ,EACnDV,EAAO,MAAQa,EAEXA,IAAe,QACXX,EAAA,QACGY,EAAA,CACP,cAAe,IACf,OAAQ,GACR,OAAQ,CAAE,EAAG,EAAI,CAAA,CAClB,EAEL,EASE,UAxCgB,IAAM,CACtBZ,EAAM,MAAQ,EACdE,EAAa,MAAQ,KACrBC,EAAe,MAAQ,KACvBL,EAAO,MAAQ,KACfM,EAAU,MAAQ,EACpB,CAmCA,CACF,8LC/DM,KAAA,CACJ,MAAAJ,EACA,aAAAE,EACA,eAAAC,EACA,OAAAL,EACA,UAAAM,EACA,SAAAS,EACA,UAAAC,GACEf,EAAQ,ytBCVNgB,EAAMC,EAAUC,CAAG,EACzBF,EAAI,IAAIG,CAAS,EACjBH,EAAI,MAAM,MAAM"}